<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>标签与分类测试</title>
    <url>/2019/11/07/%E6%A0%87%E7%AD%BE%E4%B8%8E%E5%88%86%E7%B1%BB%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>这是一个测试的分类标签</p><p>。。</p><p>。。。</p><p>。。。。</p><p>。。。。</p>]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>hexo建站</tag>
        <tag>hexo部署</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>陈子衿测试文章</title>
    <url>/2019/10/30/%E9%99%88%E5%AD%90%E8%A1%BF%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>这是一篇测试文章，欢迎关注作者博客[1]:<a href="https://github.com/luckcsk" target="_blank" rel="noopener">https://github.com/luckcsk</a></p><h4 id="首先安装ansible做批量安装"><a href="#首先安装ansible做批量安装" class="headerlink" title="* 首先安装ansible做批量安装"></a>* 首先安装ansible做批量安装</h4><h5 id="ansible"><a href="#ansible" class="headerlink" title="ansible"></a>ansible</h5><p>利用ansible批量安装部署架构服务，实现一键化部署。</p><p>使用 Ansible 无须在被管理的机器上安装代理，所以不存在如何升级远程守护进程的问题，也不存在由于卸载了守护进程而无法管理系统的问题。</p><a id="more"></a>


<p>原理：Ansible 是一个模型驱动的配置管理器，支持多节点发布、远程任务执行。<strong>默认使用 SSH 进行远程连接。无需在被管理节点上安装附加软件，可使用各种编程语言进行扩展</strong></p>
<h5 id="部署思路："><a href="#部署思路：" class="headerlink" title="部署思路："></a>部署思路：</h5><blockquote>
<p>先安装ansible <code>yum install -y ansible</code></p>
<p>创建秘钥对<code>ssh-keygen</code></p>
</blockquote>
<blockquote>
<p><strong>进行批量分发公钥脚本</strong></p>
<p>创建一个写角色剧本的目录</p>
<p>创建角色命令<code>ansible-galaxy init +名称</code></p>
<p>写各个服务的角色剧本</p>
<p>将剧本整合到一块</p>
<p>实现一键化部署</p>
</blockquote>
<h5 id="安装流程图"><a href="#安装流程图" class="headerlink" title="安装流程图"></a>安装流程图</h5><h6 id="rsync、全网备份、nfs、sersync实时同步服务"><a href="#rsync、全网备份、nfs、sersync实时同步服务" class="headerlink" title="rsync、全网备份、nfs、sersync实时同步服务"></a>rsync、全网备份、nfs、sersync实时同步服务</h6><p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 1.png)</p>
<h6 id="LNMP"><a href="#LNMP" class="headerlink" title="LNMP"></a>LNMP</h6><p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 2.png)</p>
<h6 id="数据库分离、负载均衡"><a href="#数据库分离、负载均衡" class="headerlink" title="数据库分离、负载均衡"></a>数据库分离、负载均衡</h6><p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 3.png)</p>
<h6 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a>高可用</h6><p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 16.png)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">配置ansible主机列表</span><br><span class="line">书写分发秘钥脚本保证SSH远程连接服务</span><br><span class="line">修改邮件配置文件并推送到backup服务器</span><br><span class="line">创建客户端全网备份的脚本</span><br><span class="line">创建服务端发送邮件的脚本</span><br><span class="line">本地创建剧本执行 先保证客户端nfs01 web01服务端backup保证守护进程模式，再进行全网备份。</span><br></pre></td></tr></table></figure>

<h5 id="配置ansible主机列表"><a href="#配置ansible主机列表" class="headerlink" title="配置ansible主机列表"></a>配置ansible主机列表</h5><p><img src="C:%5CUsers%5CAdministrator%5CDesktop%5C%E8%B5%84%E6%96%99%E6%88%AA%E5%9B%BE%5Cansible_hosts.png" alt></p>
<h5 id="批量分发公钥脚本"><a href="#批量分发公钥脚本" class="headerlink" title="批量分发公钥脚本"></a>批量分发公钥脚本</h5><p><img src="C:%5CUsers%5CAdministrator%5CDesktop%5C%E8%B5%84%E6%96%99%E6%88%AA%E5%9B%BE%5CGY.png" alt></p>
<h5 id="web客户端脚本"><a href="#web客户端脚本" class="headerlink" title="web客户端脚本"></a>web客户端脚本</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置本地IP为备份数据目录</span></span><br><span class="line">ip=`hostname -i`</span><br><span class="line">mkdir -p /backup/$ip/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">打包站点和日志文件</span></span><br><span class="line">cd /var/html &amp;&amp; tar zcf /backup/$ip/www_$(date +%F-%w -d "-1 day").tar.gz ./www/</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">cd</span> /app/ &amp;&amp; tar zcf /backup/<span class="variable">$ip</span>/logs_$(date +%F-%w -d <span class="string">"-1 day"</span>).tar.gz ./logs/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">打包系统配置文件</span></span><br><span class="line">cd /etc &amp;&amp; tar zcfPh /backup/$ip/etc_$(date +%F-%w -d "-1 day").tar.gz ./fstab ./profile ./hosts ./rc.local</span><br><span class="line">cp /var/spool/cron/root /backup/$ip/root_$(date +%F-%w -d "-1 day").tar.gz</span><br><span class="line">cd /etc/sysconfig &amp;&amp; tar zcf /backup/$ip/iptables-config_$(date +%F-%w -d "-1 day").tar.gz ./iptables-config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">打包脚本目录</span></span><br><span class="line">cd /server &amp;&amp; tar zcf /backup/$ip/scripts_$(date +%F-%w -d "-1 day").tar.gz ./scripts/</span><br><span class="line"><span class="meta">#</span><span class="bash">生成指纹文件</span></span><br><span class="line">md5sum /backup/$ip/*.tar.gz&gt; /backup/$ip/finger.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">推送数据到备份服务器</span></span><br><span class="line">rsync -avzP /backup/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">删除七天以前的数据</span></span><br><span class="line">find /backup/$ip/ -type f -mtime +7 -delete</span><br></pre></td></tr></table></figure>



<h5 id="nfs客户端脚本"><a href="#nfs客户端脚本" class="headerlink" title="nfs客户端脚本"></a>nfs客户端脚本</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置本地IP为备份数据目录</span></span><br><span class="line">ip=`hostname -i`</span><br><span class="line">mkdir -p /backup/$ip/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">打包系统配置文件</span></span><br><span class="line">cd /etc &amp;&amp; tar zcfPh /backup/$ip/etc_$(date +%F-%w -d "-1 day").tar.gz ./fstab ./profile ./hosts rc.local</span><br><span class="line">cp /var/spool/cron/root /backup/$ip/root_$(date +%F-%w -d "-1 day").tar.gz</span><br><span class="line">cd /etc/sysconfig &amp;&amp; tar zcf /backup/$ip/ip_$(date +%F-%w -d "-1 day").tar.gz ./iptables-config</span><br><span class="line"><span class="meta">#</span><span class="bash">打包脚本目录</span></span><br><span class="line">cd /server &amp;&amp; tar zcf /backup/$ip/scripts_$(date +%F-%w -d "-1 day").tar.gz ./scripts/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">生成指纹文件</span></span><br><span class="line">md5sum /backup/$ip/*.tar.gz&gt; /backup/$ip/finger.txt</span><br><span class="line"><span class="meta">#</span><span class="bash">推送数据到备份服务器</span></span><br><span class="line">rsync -avzP /backup/ rsync_backup@172.16.1.41::backup --password-file=/etc/rsync.password </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">删除七天以前的数据</span></span><br><span class="line">find /backup/ -type f -mtime +7 -delete</span><br></pre></td></tr></table></figure>

<h5 id="服务端脚本"><a href="#服务端脚本" class="headerlink" title="服务端脚本"></a>服务端脚本</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@m01 roles]# cat /server/backup_rsync.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">验证数据完整性</span></span><br><span class="line">find /backup/ -type f -name "finger.txt" -mtime -2|xargs md5sum -c &gt;/tmp/finger.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">将验证结果发送给运维人员</span></span><br><span class="line">mail -s "Finger" 1991693601@qq.com &lt; /tmp/finger.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">删除180天以前的数据，保留周一和周六的数据</span></span><br><span class="line">find /backup/ -type f -mtime +180 ! -name "*[1,6].tar.gz" -delete</span><br></pre></td></tr></table></figure>



<h5 id="邮件-etc-mail-rc的配置"><a href="#邮件-etc-mail-rc的配置" class="headerlink" title="邮件/etc/mail.rc的配置"></a>邮件/etc/mail.rc的配置</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set bsdcompat</span><br><span class="line">set bsdcompat</span><br><span class="line">set from=1991693601@qq.com</span><br><span class="line">set smtp=smtp.qq.com</span><br><span class="line">set smtp-auth-user=1991693601@qq.com</span><br><span class="line">set smtp-auth-password=hafcinyzccxfbgeh</span><br><span class="line">set smtp-auth=login</span><br><span class="line">&quot;/etc/mail.rc&quot;</span><br></pre></td></tr></table></figure>

<h5 id="rsync"><a href="#rsync" class="headerlink" title="* rsync"></a>* rsync</h5><p><strong>简述</strong> ：rsync是一款开源的备份工具，可以在不同主机之间进行同步，可以实现全量与增量备份，因此分常适用于架构集中式的备份或异地备份等应用</p>
<p>​    监听端口：873</p>
<p>​    运行模式：C/S</p>
<p><strong>传输模式</strong></p>
<p>大致使用三种主要的数据传输方式</p>
<p>本地方式 cp</p>
<p>远程方式 scp</p>
<p>守护进程()放到后台一直运行</p>
<p><strong>配置文件</strong>： 角色剧本的方式，把配置文件放到rsync角色file文件里。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@m01 roles]# vim rsync/files/</span><br><span class="line">mail.rc      rsyncd.conf  </span><br><span class="line">[root@m01 roles]# vim rsync/files/rsyncd.conf</span><br><span class="line">uid = rsync</span><br><span class="line">gid = rsync</span><br><span class="line">port = 873</span><br><span class="line">fake super = yes</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 300</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">lock file = /var/run/rsync.lock</span><br><span class="line">log file = /var/log/rsyncd.log</span><br><span class="line">ignore errors</span><br><span class="line">read only = false</span><br><span class="line">list = false</span><br><span class="line">hosts allow = 172.16.1.0/24</span><br><span class="line">hosts deny = 0.0.0.0/32</span><br><span class="line">auth users = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.password</span><br><span class="line">[backup]</span><br><span class="line">comment = "backup dir by oldboy"</span><br><span class="line">path = /backup</span><br></pre></td></tr></table></figure>



<h4 id="剧本部署rsync"><a href="#剧本部署rsync" class="headerlink" title="* 剧本部署rsync"></a>* 剧本部署rsync</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@m01 roles]# vim rsync/tasks/main.yml </span><br><span class="line">   ---</span><br><span class="line">- name: 安装rsync</span><br><span class="line">     yum: name=rsync state=installed</span><br><span class="line">   - name: 编写文件信息</span><br><span class="line">     copy: src=rsyncd.conf dest=/etc/</span><br><span class="line">     when: ansible_eth1.ipv4.address == &quot;172.16.1.41&quot;</span><br><span class="line">   - name: 创建虚拟用户</span><br><span class="line">     user: name=rsync shell=/sbin/nologin create_home=no</span><br><span class="line">     when: ansible_eth1.ipv4.address == &quot;172.16.1.41&quot;</span><br><span class="line">   - name: 创建备份目录</span><br><span class="line">     file: path=/backup state=directory owner=rsync group=rsync</span><br><span class="line">     when: ansible_eth1.ipv4.address == &quot;172.16.1.41&quot;</span><br><span class="line">   - name: 创建密码文件</span><br><span class="line">     copy: content=&quot;rsync_backup:oldboy123&quot; dest=/etc/rsync.password mode=600</span><br><span class="line">     when: ansible_eth1.ipv4.address == &quot;172.16.1.41&quot;</span><br><span class="line">   - name: 启动服务程序</span><br><span class="line">     service: name=rsyncd state=started enabled=yes</span><br><span class="line">   - name: 创建密码文件</span><br><span class="line">     copy: content=&quot;oldboy123&quot; dest=/etc/rsync.password mode=600</span><br><span class="line">     when: ansible_eth1.ipv4.address != &quot;172.16.1.41&quot;</span><br></pre></td></tr></table></figure>
<h4 id="全网备份-守护进程"><a href="#全网备份-守护进程" class="headerlink" title="* 全网备份 守护进程"></a>* 全网备份 守护进程</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@m01 roles]# vim rsync_qwbf/tasks/main.yml </span><br><span class="line">   ---</span><br><span class="line"><span class="meta">#</span><span class="bash"> tasks file <span class="keyword">for</span> 全网备份</span></span><br><span class="line">   - name: 推送本地脚本文件推送到备份的服务器</span><br><span class="line">     copy: src=/server/backup_rsync.sh dest=/server/scripts/backup.sh</span><br><span class="line">     when: ansible_eth1.ipv4.address == "172.16.1.41"</span><br><span class="line">   - name: 推送本地脚本文件推送到Web服务器</span><br><span class="line">     copy: src=/server/backup_web.sh dest=/server/scripts/backup.sh</span><br><span class="line">     when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">   - name: 推送本地脚本文件推送到nfs服务器</span><br><span class="line">     copy: src=/server/backup_nfs.sh dest=/server/scripts/backup.sh</span><br><span class="line">     when: ansible_eth1.ipv4.address == "172.16.1.31"</span><br><span class="line">   - name: cron web backup</span><br><span class="line">     cron: name=rsync_backup minute='00' hour='00' job='sh /server/scripts/backu</span><br><span class="line">   p.sh &gt; /dev/null 2&gt;&amp;1' state=present</span><br><span class="line">     when: ansible_eth1.ipv4.address != "172.16.1.41"</span><br><span class="line">   - name: 开启mail</span><br><span class="line">     service: name=postfix.service state=started enabled=yes</span><br><span class="line">     when: ansible_eth1.ipv4.address == "172.16.1.41"</span><br><span class="line">   - name: 编辑mail.rc</span><br><span class="line">     copy: src=/root/ansible/mail.rc dest=/etc/</span><br><span class="line">     notify: restart postfix.service</span><br><span class="line">     when: ansible_eth1.ipv4.address == "172.16.1.41"</span><br><span class="line">   - name: 服务端定时任务，发送邮件</span><br><span class="line">     cron: name='send mail' minute='00' hour='06' job='sh /server/scripts/backup</span><br><span class="line">   .sh &gt;/dev/null 2&gt;&amp;1' state=present</span><br><span class="line">     when: ansible_eth1.ipv4.address == "172.16.1.41"</span><br></pre></td></tr></table></figure>

<h4 id="部署nfs服务"><a href="#部署nfs服务" class="headerlink" title="* 部署nfs服务"></a>* 部署nfs服务</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@m01 roles]# vim nfs/tasks/main.yml </span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> tasks file <span class="keyword">for</span> nfs</span></span><br><span class="line">- name: 安装软件</span><br><span class="line">  yum: name=&#123;&#123; item &#125;&#125; state=installed</span><br><span class="line">  loop:</span><br><span class="line">   - rpcbind</span><br><span class="line">   - nfs-utils</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.31"</span><br><span class="line">- name: 编写配置文件</span><br><span class="line">  copy: src=exports dest=/etc</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.31"</span><br><span class="line">- name: 启动服务程序</span><br><span class="line">  service: name=rpcbind.socket state=started enabled=yes</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.31"</span><br><span class="line">- name: 启动服务</span><br><span class="line">  service: name=nfs state=started enabled=yes</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.31"</span><br><span class="line">- name: 创建存储目录</span><br><span class="line">  file: path=/data1 state=directory owner=nfsnobody group=nfsnobody</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.31"</span><br><span class="line">- name: 客户端安装软件</span><br><span class="line">  yum: name=nfs-utils state=installed</span><br><span class="line">  when: ansible_eth1.ipv4.address != "172.16.1.31"</span><br><span class="line">- name: 创建目录</span><br><span class="line">  file: path=/W state=directory</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.41"</span><br><span class="line">- name: 直接挂载</span><br><span class="line">  mount: src=172.16.1.31:/data1 path=/W fstype=nfs state=mounted</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.41"</span><br></pre></td></tr></table></figure>


<h4 id="实时同步"><a href="#实时同步" class="headerlink" title="* 实时同步"></a>* 实时同步</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@m01 roles]# vim sersync/tasks/main.yml </span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> tasks file <span class="keyword">for</span> 实时同步</span></span><br><span class="line">- name: 安装inotify</span><br><span class="line">  yum: name=inotify-tools state=installed</span><br><span class="line">- name: 推送sersync压缩包并解压</span><br><span class="line">  copy: src=/root/ansible/sersync_installdir_64bit.zip dest=/opt</span><br><span class="line">- name: unzip</span><br><span class="line">  unarchive:</span><br><span class="line">   src: /opt/sersync_installdir_64bit.zip</span><br><span class="line">   copy: no</span><br><span class="line">   dest: /opt/</span><br><span class="line">  ignore_errors: yes</span><br><span class="line">- name: 复制sersync</span><br><span class="line">  shell: "cp -a /opt/sersync_installdir_64bit/sersync /usr/local/"</span><br><span class="line">  ignore_errors: yes</span><br><span class="line">- name: 加执行权限</span><br><span class="line">  file: path=/usr/local/sersync/bin/sersync mode=755</span><br><span class="line">  ignore_errors: yes</span><br><span class="line">- name: 编写配置文件</span><br><span class="line">  copy: src=/root/ansible/confxml.xml dest=/usr/local/sersync/conf/ backup=ye</span><br><span class="line">s</span><br><span class="line">- name: 设置变量</span><br><span class="line">  shell: echo 'export PATH="$PATH:/usr/local/sersync/bin/"'&gt;&gt; /etc/profile</span><br><span class="line">- name:</span><br><span class="line">  shell: "source /etc/profile"</span><br><span class="line">- name: 传输脚本</span><br><span class="line">  copy: src=ch.sh dest=/server/scripts/</span><br><span class="line">- name:</span><br><span class="line">  file: path=/server/scripts/ch.sh mode=755</span><br></pre></td></tr></table></figure>



<h4 id="LNMP部署"><a href="#LNMP部署" class="headerlink" title="* LNMP部署"></a>* LNMP部署</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> tasks file <span class="keyword">for</span> LNMP</span></span><br><span class="line">- name: 设置目录权限</span><br><span class="line">  file: path=/tmp/ mode=1777</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: 配置官方源</span><br><span class="line">  copy: src=nginx.repo dest=/etc/yum.repos.d/</span><br><span class="line">- name: 安装nginx</span><br><span class="line">  yum: name=nginx state=installed</span><br><span class="line">- name: 安装MySQL</span><br><span class="line">  yum: name=&#123;&#123; item &#125;&#125; state=installed</span><br><span class="line">  loop:</span><br><span class="line">   - mariadb-server</span><br><span class="line">   - mariadb</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: 安装PHP扩展源</span><br><span class="line">  yum: name=&#123;&#123; item &#125;&#125; state=present</span><br><span class="line">  loop:</span><br><span class="line">   - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">   - https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br><span class="line">- name: 安装PHP</span><br><span class="line">  yum: name=&#123;&#123; item &#125;&#125; state=present enablerepo=webtatic</span><br><span class="line">  loop:</span><br><span class="line">   - php71w</span><br><span class="line">   - php71w-cli</span><br><span class="line">   - php71w-common</span><br><span class="line">   - php71w-devel</span><br><span class="line">   - php71w-embedded</span><br><span class="line">   - php71w-gd</span><br><span class="line">   - php71w-mcrypt</span><br><span class="line">   - php71w-mbstring</span><br><span class="line">   - php71w-pdo</span><br><span class="line">   - php71w-xml</span><br><span class="line">   - php71w-fpm</span><br><span class="line">   - php71w-mysqlnd</span><br><span class="line">   - php71w-opcache</span><br><span class="line">   - php71w-pecl-memcached</span><br><span class="line">   - php71w-pecl-redis</span><br><span class="line">   - php71w-pecl-mongodb</span><br><span class="line">  ignore_errors: yes</span><br><span class="line">- name: 启动服务程序</span><br><span class="line">  service: name=mariadb.service state=started enabled=yes</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: 启动服务</span><br><span class="line">  service: name=&#123;&#123; item &#125;&#125; state=started enabled=yes</span><br><span class="line">  loop:</span><br><span class="line">   - nginx</span><br><span class="line">   - php-fpm.service</span><br><span class="line">  when: ansible_eth1.ipv4.address != "172.16.1.8"</span><br><span class="line">                                                           49,3          Bot</span><br></pre></td></tr></table></figure>



<h5 id="使用到的模块："><a href="#使用到的模块：" class="headerlink" title="使用到的模块："></a>使用到的模块：</h5><p>前提: <strong>mariadb安装之后没有密码，我们必须先更改root的密码<br>使用mysql相关de模块,首先需要安装<em>mysql-python</em></strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.mysql_db 		添加或从远程主机上删除MSSQL数据库</span><br><span class="line">参数：</span><br><span class="line">login_host		主机地址</span><br><span class="line">login_user 		用户</span><br><span class="line">login_password	用户密码</span><br><span class="line">login_port		端口号（默认3306）</span><br><span class="line">name			新建库的名字</span><br><span class="line">encoding		编码方式</span><br><span class="line">state			（present 目前</span><br><span class="line"> 				  absent 删除</span><br><span class="line"> 				  dump 导出</span><br><span class="line"> 				  import</span><br><span class="line"> 				  ）</span><br><span class="line">2. mysql_user模块		从远程主机添加或删除MySQL用户</span><br><span class="line">user  			创建用户名称</span><br><span class="line">password   		设置密码</span><br><span class="line">priv			给用户设置权限</span><br><span class="line">target    		远程主机上要读取或写入的转储文件的位置。支持未压缩的SQL文件（.sql）以及bzip2（.bz2），gzip（.gz）和xz（2.0中添加）压缩文件。</span><br><span class="line">user</span><br></pre></td></tr></table></figure>

<h5 id="部署www、bbs、blog网站页面"><a href="#部署www、bbs、blog网站页面" class="headerlink" title="部署www、bbs、blog网站页面"></a>部署www、bbs、blog网站页面</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> tasks file <span class="keyword">for</span> html</span></span><br><span class="line">- name: 分发站点配置文件</span><br><span class="line">  copy: src=&#123;&#123; item &#125;&#125; dest=/etc/nginx/conf.d</span><br><span class="line">  loop:</span><br><span class="line">   - www.conf</span><br><span class="line">   - blog.conf</span><br><span class="line">   - bbs.conf</span><br><span class="line">- name: a</span><br><span class="line">  shell: mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak</span><br><span class="line"></span><br><span class="line">- name: 创建目录</span><br><span class="line">  file: path=/&#123;&#123; item &#125;&#125;/&#123;&#123; item &#125;&#125; state=directory</span><br><span class="line">  loop:</span><br><span class="line">   - /html/blog</span><br><span class="line">   - /html/bbs</span><br><span class="line">   - /html/www</span><br><span class="line"></span><br><span class="line">- name: 推送wordpress DedeCMS  DiscuzX</span><br><span class="line">   - wordpress-5.2.4-zh_CN_.tar.gz</span><br><span class="line">   - DedeCMS-V5.7-UTF8-SP2.tar.gz</span><br><span class="line">   - Discuz_20190917.zip</span><br><span class="line">- name: 解压各个压缩包</span><br><span class="line">  unarchive: src=/opt/&#123;&#123; item &#125;&#125; copy=no dest=/opt/</span><br><span class="line">  loop:</span><br><span class="line">   - wordpress-5.2.4-zh_CN_.tar.gz</span><br><span class="line">   - DedeCMS-V5.7-UTF8-SP2.tar.gz</span><br><span class="line">  ignore_errors: yes</span><br><span class="line">- name: 继续解压</span><br><span class="line">  unarchive: src=/opt/Discuz_20190917.zip copy=no dest=/opt/</span><br><span class="line">  ignore_errors: yes</span><br><span class="line">- name: 移动文件到指定目录</span><br><span class="line">  shell: mv /opt/wordpress/* /html/blog/</span><br><span class="line">- name: 移动文件到指定目录</span><br><span class="line">  shell: mv /opt/DedeCMS-V5.7-UTF8-SP2/uploads/* /html/www/</span><br><span class="line">- name: 移动文件到指定目录</span><br><span class="line">  shell: mv /opt/upload/* /html/bbs/</span><br><span class="line">- name: 配置文件</span><br><span class="line">  copy: src=wp-config.php dest=/html/blog/</span><br><span class="line">- name: group</span><br><span class="line">  group: name=www state=present</span><br><span class="line">- name: 创建虚拟用户www</span><br><span class="line">  user: name=www uid=1001 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">- name: 设置目录权限</span><br><span class="line">  loop:</span><br><span class="line">   - www</span><br><span class="line">   - bbs</span><br><span class="line">   - blog</span><br><span class="line">- name: 推送配置文件</span><br><span class="line">  copy: src=www.conf.bak dest=/etc/php-fpm.d/www.conf</span><br><span class="line">- name: 安装nfs</span><br><span class="line">  yum: name=nfs-utils state=installed</span><br><span class="line">- name: dir</span><br><span class="line">  file: path=/data1 state=directory</span><br><span class="line">- name: 	*********************************挂载用户文件到存储****************</span><br><span class="line">  mount:</span><br><span class="line">    src: 172.16.1.31:/data1</span><br><span class="line">    path: /html/blog/wp-content/uploads</span><br><span class="line">    fstype: nfs</span><br><span class="line">    state: mounted</span><br><span class="line">- name: 安装依赖</span><br><span class="line">  yum: name=MySQL-python state=installed</span><br><span class="line">- name: 创建数据库密码</span><br><span class="line">  shell: mysqladmin -uroot password "oldboy123"</span><br><span class="line">  ignore_errors: yes</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: 创建库</span><br><span class="line">  mysql_db:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "wordpress"</span><br><span class="line">    encoding: "utf8"</span><br><span class="line">    state: "present"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: dede</span><br><span class="line">  mysql_db:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "dede"</span><br><span class="line">    encoding: "utf8"</span><br><span class="line">    state: "present"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: ultrax</span><br><span class="line">  mysql_db:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "ultrax"</span><br><span class="line">    encoding: "utf8"</span><br><span class="line">    state: "present"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: 创建用户赋予权限</span><br><span class="line">  mysql_user:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "wordpress"</span><br><span class="line">    password: "oldboy123"</span><br><span class="line">    priv: "*.*:ALL"</span><br><span class="line">    state: "present"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: 创建用户赋予权限</span><br><span class="line">  mysql_user:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "dede"</span><br><span class="line">    password: "oldboy123"</span><br><span class="line">    priv: "*.*:ALL"</span><br><span class="line">    state: "present"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: 创建用户赋予权限</span><br><span class="line">  mysql_user:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "ultrax"</span><br><span class="line">    password: "oldboy123"</span><br><span class="line">    priv: "*.*:ALL"</span><br><span class="line">    state: "present"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br></pre></td></tr></table></figure>

<h5 id="存储服务器上修改属主"><a href="#存储服务器上修改属主" class="headerlink" title="存储服务器上修改属主"></a>存储服务器上修改属主</h5><p>修改属主为www，解决映射权限问题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> tasks file <span class="keyword">for</span> html_zhandian2</span></span><br><span class="line">- name: 创建虚拟用户</span><br><span class="line">  user: name=www shell=/sbin/nologin create_home=no uid=1001</span><br><span class="line">- name: 修改权限</span><br><span class="line">  file: path=/data1 owner=www group=www</span><br></pre></td></tr></table></figure>

<h4 id="数据库分离"><a href="#数据库分离" class="headerlink" title="* 数据库分离"></a>* 数据库分离</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据迁移 mysql_feili</span></span><br><span class="line">- name: 安装MySQL</span><br><span class="line">  yum: name=&#123;&#123; item &#125;&#125; state=installed</span><br><span class="line">  loop:</span><br><span class="line">   - mariadb</span><br><span class="line">   - mariadb-server</span><br><span class="line">   - MySQL-python</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.51"</span><br><span class="line">- name: 启动服务器</span><br><span class="line">  service: name=mariadb.service state=restarted</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.51"</span><br><span class="line">- name: aa</span><br><span class="line">  shell: mysqladmin -uroot password 'oldboy123'</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.51"</span><br><span class="line">  ignore_errors: yes</span><br><span class="line">- name: 数据库导出</span><br><span class="line">  mysql_db:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "all"</span><br><span class="line">    state: "dump"</span><br><span class="line">    target: "/tmp/mezz.gz"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.8"</span><br><span class="line">- name: 推送数据库数据</span><br><span class="line">  copy: src=mezz.gz dest=/tmp/</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.51"</span><br><span class="line">- name: 导入数据库数据</span><br><span class="line">  mysql_db:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "all"</span><br><span class="line">    target: "/tmp/mezz.gz"</span><br><span class="line">    state: "import"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.51"</span><br><span class="line">- name: 改配置文件</span><br><span class="line">  copy: src=wp-config.php dest=/html/blog/</span><br><span class="line">  when: ansible_eth1.ipv4.address != "172.16.1.51"</span><br><span class="line">- name: my.conf配置文件</span><br><span class="line">  copy: src=my.cnf dest=/etc</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.51"</span><br><span class="line">- name: 修改数据库用户信息</span><br><span class="line">  mysql_user:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "wordpress"</span><br><span class="line">    password: "oldboy123"</span><br><span class="line">    host: "172.16.1.%"</span><br><span class="line">    priv: "*.*:ALL"</span><br><span class="line">    state: "present"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.51"</span><br><span class="line">  ignore_errors: yes</span><br><span class="line">- name: 修改数据库用户信息</span><br><span class="line">  mysql_user:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "dede"</span><br><span class="line">    password: "oldboy123"</span><br><span class="line">    host: "172.16.1.%"</span><br><span class="line">    priv: "*.*:ALL"</span><br><span class="line">    state: "present"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.51"</span><br><span class="line">- name: 修改数据库用户信息</span><br><span class="line">  mysql_user:</span><br><span class="line">    login_user: "root"</span><br><span class="line">    login_password: "oldboy123"</span><br><span class="line">    login_port: "3306"</span><br><span class="line">    name: "ultrax"</span><br><span class="line">    password: "oldboy123"</span><br><span class="line">    host: "172.16.1.%"</span><br><span class="line">    priv: "*.*:ALL"</span><br><span class="line">    state: "present"</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.51"</span><br></pre></td></tr></table></figure>

<h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="* 负载均衡"></a>* 负载均衡</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> tasks file <span class="keyword">for</span> fuzai</span></span><br><span class="line">- name: 安装软件</span><br><span class="line">  yum: name=nginx state=installed</span><br><span class="line">- name:</span><br><span class="line">  service: name=nginx state=started</span><br><span class="line">- name: 编辑配置文件</span><br><span class="line">  copy: src=nginx.conf dest=/etc/nginx/</span><br><span class="line">~</span><br></pre></td></tr></table></figure>

<h4 id="高可用-1"><a href="#高可用-1" class="headerlink" title="* 高可用"></a>* 高可用</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> tasks file <span class="keyword">for</span> Gky</span></span><br><span class="line">- name: 安装软件</span><br><span class="line">  yum: name=&#123;&#123; item &#125;&#125; state=installed</span><br><span class="line">  loop:</span><br><span class="line">   - nginx</span><br><span class="line">   - keepalived</span><br><span class="line">- name: a</span><br><span class="line">  copy: src=nginx.conf dest=/etc/nginx/</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.6"</span><br><span class="line">- name: b</span><br><span class="line">  copy: src=monitor_lb01.sh dest=/server/scripts/</span><br><span class="line">- name: chmod</span><br><span class="line">  file: path=/server/scripts/monitor_lb01.sh state=file mode=755</span><br><span class="line">- name: b</span><br><span class="line">  copy: src=mail.rc dest=/etc/</span><br><span class="line">  notify: mail restart</span><br><span class="line">- name: 编写配置文件</span><br><span class="line">  copy: src=keepalived_a.conf dest=/etc/keepalived/keepalived.conf</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.5"</span><br><span class="line">- name: a</span><br><span class="line">  copy: src=keepalived_b.conf dest=/etc/keepalived/keepalived.conf</span><br><span class="line">  when: ansible_eth1.ipv4.address == "172.16.1.6"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- name: 启动服务</span><br><span class="line">  service: name=&#123;&#123; item &#125;&#125; state=started</span><br><span class="line">  loop:</span><br><span class="line">   - nginx</span><br><span class="line">   - keepalived.service</span><br><span class="line">- name: 定时任务</span><br><span class="line">  cron:</span><br><span class="line">    name: keepalived报警通知</span><br><span class="line">    minute: '*/1'</span><br><span class="line">    job: '/server/scripts/vip.sh &gt;/dev/null 2&gt;&amp;1'</span><br><span class="line">    state: present</span><br></pre></td></tr></table></figure>

<h4 id="整合剧本"><a href="#整合剧本" class="headerlink" title="整合剧本"></a>整合剧本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat site.yml</span><br><span class="line"><span class="meta">#</span><span class="bash"> 部署rsync</span></span><br><span class="line">- hosts: rsync</span><br><span class="line">  roles:</span><br><span class="line">    - rsync</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">部署nfs，实现共享</span></span><br><span class="line">- hosts: nfs</span><br><span class="line">  roles: </span><br><span class="line">    - nfs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">实现全网备份</span></span><br><span class="line">- hosts: rsync</span><br><span class="line">  roles:</span><br><span class="line">    - rsync_qwbf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">实现实时同步</span></span><br><span class="line">- hosts: nfs1</span><br><span class="line">  roles:</span><br><span class="line">    - sersync</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">部署LNMP</span></span><br><span class="line">- hosts: LNMP</span><br><span class="line">  roles:</span><br><span class="line">    - LNMP</span><br><span class="line"><span class="meta">#</span><span class="bash">创建站点www、bbs、blog</span></span><br><span class="line">- hosts: LNMP</span><br><span class="line">  roles:</span><br><span class="line">    - html_zhandian</span><br><span class="line">- hosts: nfs1</span><br><span class="line">  roles:</span><br><span class="line">    - html_zhandian2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">数据库分离</span></span><br><span class="line">- hosts: mysql_F</span><br><span class="line">  roles:</span><br><span class="line">    - mysql_feili</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">负载均衡</span></span><br><span class="line">- hosts: lb01</span><br><span class="line">  roles: </span><br><span class="line">    - fuzai</span><br><span class="line"><span class="meta">#</span><span class="bash">高可用</span></span><br><span class="line">- hosts: Gky</span><br><span class="line">  roles:</span><br><span class="line">    - Gky</span><br></pre></td></tr></table></figure>

<h5 id="检查剧本"><a href="#检查剧本" class="headerlink" title="检查剧本"></a>检查剧本</h5><p><code>ansible-playbook -C site.yml</code></p>
<p>一键化部署</p>
<p><code>ansible-playbook site.yml</code></p>
<h4 id="常见故障和问题"><a href="#常见故障和问题" class="headerlink" title="* 常见故障和问题"></a>* 常见故障和问题</h4><h5 id="rsync故障"><a href="#rsync故障" class="headerlink" title="rsync故障"></a>rsync故障</h5><blockquote>
<p>1、  <strong>No route to host (113)</strong></p>
<p>[root@backup ~]# rsync -avz /tmp/ rsync_backup@172。16.1.41::backup –password-file=/etc/rsync.password<br>rsync: failed to connect to 172.16.1.41:No route to host (113)<br>rsync error: error in socket IO (code 10) at clientserver.c(124) [sender=3.0.6]<br>错误原因：服务端和客户端iptables(防火墙)开启<br>解决方法：将服务端和客户端的iptables全部关闭<br>     systemctl status firewalld.service     查看防火墙状态<br>     systemctl status firewalld.service     关闭防火墙，该命令最好连续执行两次</p>
<p>2、<strong>@ERROR: auth failed on module backup</strong></p>
<p>[root@backup ~]# rsync -avz /tmp/ <a href="mailto:rsync_back@172.16.1.41" target="_blank" rel="noopener">rsync_back@172.16.1.41</a>::backup –password-file=/etc/rsync.password </p>
<p>@ERROR: auth failed on module backup</p>
<p>rsync error: error starting client-server protocol (code 5) at main.c(1503) [sender=3.0.6]</p>
<p>错误原因：模块出现错误</p>
<p>解决方法：进入服务端，查看 /etc/rsyncd.conf 配置文件   查看auth user 和[]内的内容。</p>
<p>3、<strong>ERROR: The remote path must start with a module name not a /</strong></p>
<p>rsync客户端执行rsync命令错误：</p>
<p> 客户端的错误现象：  </p>
<p> [root@backup ~]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::/backup</p>
<p>ERROR: The remote path must start with a module name not a /</p>
<p>rsync error: error starting client-server protocol (code 5) at main.c(1503) [sender=3.0.6]</p>
<p>错误原因：rsync命令语法理解错误</p>
<p>解决方法：::/backup是错误的语法，应该为::backup(rsync模块)</p>
<p>4、<strong>@ERROR: Unknown module ‘backup’</strong></p>
<p>[root@backup ~]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup</p>
<p>@ERROR: Unknown module ‘backup’</p>
<p>rsync error: error starting client-server protocol (code 5) at main.c(1503) [sender=3.0.6]</p>
<p>错误原因：模块写错了</p>
<p> 解决方法：1、 /etc/rsyncd.conf配置文件模块名称书写错误</p>
<p>  ​            2、配置文件中网段限制不对</p>
</blockquote>
<h5 id="nfs故障"><a href="#nfs故障" class="headerlink" title="nfs故障"></a>nfs故障</h5><blockquote>
<p>1、<strong>The rpcbind failure error</strong><br>故障现象：<br>nfs mount: server1:: RPC: Rpcbind failure<br>RPC: Timed Out<br>nfs mount: retrying: /mntpoint<br>原因：<br>第一，可能因为客户机的hosts文件中存在错误的ip地址、主机名或节点名组合；<br>第二，服务器因为过载而暂时停止服务。</p>
<p> 2、<strong>The stale file handle error</strong><br>现象：<br>stale NFS file handle<br>原因：<br>服务器上的共享资源移动位置了，在客户端使用umount和mount重新挂接就可以了。</p>
<p>3、<strong>The unknown host error</strong><br>现象：<br> nfs mount: sserver1:: RPC: Unknown host<br>原因：<br>hosts文件中的内容不正确。</p>
<p> 4.<strong>RPC: Program not registered &amp; retrying</strong><br>现象：<br>nfs mount: 10.10.2.3: : RPC: Program not registered<br>nfs mount: retrying: /data/data/resinfo2</p>
<p>原因：<br>没有启动NFS共享端服务。</p>
</blockquote>
<h5 id="LNMP-1"><a href="#LNMP-1" class="headerlink" title="LNMP"></a>LNMP</h5><blockquote>
<p>1、nginx: [emerg] getpwnam(“www”) failed</p>
<p>出现情况：刚装完nginx后，运行测试文件的时候。</p>
<p>错误意思：获得 www 用户失败。</p>
<p>解决办法：在nginx.conf中 把”#user nobody;”的前面#注释去掉，改为”user www www;”</p>
<p>2、网站数据库连接不上排错问题:</p>
<p>1) 检查连接数据库代码文件配置是否正确<br>mysql -uwordpress -poldboy123 -h172.16.1.51<br>2) 修改数据库用户信息<br>方法一: 允许用户使用 wordpres@’web01’ 连接<br>grant all on wordpress.* to ‘wordpress’@’web01’ identified by ‘oldboy123’;<br>方法二: 关闭数据库反向解析操作(跳过反向解析过程)<br>delete from mysql.user where user=’wordpress’ and host=’web01’; 删除表信息<br>flush privileges;<br>vim /etc/my.cnf<br>[mysqld]<br>skip-name-resolve<br>重启数据库服务 </p>
<p>3、nginx配置文件<strong>location匹配优先级</strong></p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location = /code1/ &#123;</span><br><span class="line"> ``rewrite ^(.*)$ /code1/index.html break;</span><br><span class="line">&#125;</span><br><span class="line">location ~ /code.* &#123;</span><br><span class="line"> ``rewrite ^(.*)$ /code3/index.html break;</span><br><span class="line">&#125;</span><br><span class="line">location ^~ /code &#123;</span><br><span class="line"> ``rewrite ^(.*)$ /code2/index.html break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>知识填坑：</p>
<p>=：进行普通字符精确匹配，完全匹配</p>
<p>^~：普通字符匹配，使用前缀匹配</p>
<p>~ ~*：表示执行一个正则匹配()</p>
<p>解决方法：</p>
<p>根据匹配找到最优匹配</p>
<p>优先级：完全匹配&gt;正则匹配&gt;前缀匹配</p>
</blockquote>
<ol start="4">
<li><p>剧本执行数据库分离，出现的问题</p>
<p>问题：浏览器访问网站，数据库连不上</p>
<p>解决：/etc/my.cnf 的“[mysqld]”配置下，添加“skip-grant-tables”，跳过权限检查功能</p>
</li>
</ol>
</blockquote>
<h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><h5 id="ntp-时间服务"><a href="#ntp-时间服务" class="headerlink" title="ntp 时间服务"></a>ntp 时间服务</h5><p><em>网络时间协议，英文名称：Network Time Protocol（NTP）是用来使计算机<a href="https://baike.baidu.com/item/时间同步" target="_blank" rel="noopener">时间同步</a>化的一种协议，它可以使<a href="https://baike.baidu.com/item/计算机/140338" target="_blank" rel="noopener">计算机</a>对其<a href="https://baike.baidu.com/item/服务器/100571" target="_blank" rel="noopener">服务器</a>或<a href="https://baike.baidu.com/item/时钟源/3219811" target="_blank" rel="noopener">时钟源</a>（如石英钟，GPS等等)做同步化，它可以提供高精准度的时间校正（LAN上与标准间差小于1毫秒，WAN上几十毫秒），且可介由加密确认的方式来防止恶毒的<a href="https://baike.baidu.com/item/协议/670528" target="_blank" rel="noopener">协议</a>攻击。NTP的目的是在无序的Internet环境中提供精确和健壮的时间服务。UDP端口号为123</em></p>
<h5 id="ntp原理"><a href="#ntp原理" class="headerlink" title="ntp原理"></a>ntp原理</h5><p>NTP的基本工作原理如图所示。Device A和Device B通过网络相连，它们都有自己独立的系统时钟，需要通过NTP实现各自系统时钟的自动同步</p>
<p> <strong>假设</strong>： 在Device A和Device B的系统时钟同步之前，Device A的时钟设定为10:00:00am，Device B的时钟设定为11:00:00am。</p>
<p>​        Device B作为NTP时间服务器，即Device A将使自己的时钟与Device B的时钟同步。</p>
<p>​        NTP报文在Device A和Device B之间单向传输所需要的时间为1秒。</p>
<p><img src="C:%5CUsers%5CAdministrator%5CDesktop%5C%E7%AC%AC%E4%B8%80%E6%AD%A5.assets%5Cb.jpg" alt="图1"></p>
<p>系统时钟同步的工作过程如下：</p>
<p>l              Device A发送一个NTP报文给Device B，该报文带有它离开Device A时的时间戳，该时间戳为10:00:00am（T1）。</p>
<p>l              当此NTP报文到达Device B时，Device B加上自己的时间戳，该时间戳为11:00:01am（T2）。</p>
<p>l              当此NTP报文离开Device B时，Device B再加上自己的时间戳，该时间戳为11:00:02am（T3）。</p>
<p>l              当Device A接收到该响应报文时，Device A的本地时间为10:00:03am（T4）。</p>
<p>至此，Device A已经拥有足够的信息来计算两个重要的参数：</p>
<p>l              NTP报文的往返时延Delay=（T4-T1）-（T3-T2）=2秒。</p>
<p>l              Device A相对Device B的时间差offset=（（T2-T1）+（T3-T4））/2=1小时。</p>
<p>这样，Device A就能够根据这些信息来设定自己的时钟，使之与Device B的时钟同步。</p>
<p>以上内容只是对NTP工作原理的一个粗略描述，</p>
<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><h5 id="chrony"><a href="#chrony" class="headerlink" title="chrony"></a>chrony</h5><p>在ntp服务器和客户端安装chrony，</p>
<p><code>yum install chrony -y</code></p>
<p>修改ntp服务器chrony 配置文件</p>
<p><code>vim /etc/chrony.conf</code></p>
<p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 8.png)</p>
<p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 9.png)</p>
<p>指定本机网卡地址为服务器地址:172.16.1.41</p>
<p>允许172.16.1.0/24网段访问</p>
<p>重启服务</p>
<p><code>systemctl restart chronyd
systemctl enable chronyd</code></p>
<p>客户端同步时间</p>
<p><code>chronyc sources</code></p>
<p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 10.png)</p>
<h5 id="用ntp搭建ntp服务器"><a href="#用ntp搭建ntp服务器" class="headerlink" title="用ntp搭建ntp服务器"></a>用ntp搭建ntp服务器</h5><p>安装软件</p>
<p><code>yum -y install ntp</code></p>
<p>客户端安装ntpdate</p>
<p><code>yum -y install ntpdate</code></p>
<p>修改ntp服务器ntp配置文件</p>
<p><code>vim /etc/ntp.conf</code></p>
<blockquote>
<p>服务器允许所有客户端同步时间</p>
<p>指定本机为服务地址，</p>
</blockquote>
<p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 11.png)</p>
<p><code>systemctl restart ntpd
systemctl enable ntpd</code></p>
<p>客户端同步时间</p>
<p><code>ntpdate 172.16.1.41</code></p>
<p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 12.png)</p>
<h4 id="mysql-主从同步"><a href="#mysql-主从同步" class="headerlink" title="mysql 主从同步"></a>mysql 主从同步</h4><h5 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h5><p> MySQL 主从复制是指数据可以从一个MySQL数据库的一个主节点，复制到一个或多个从节点。MySQL 默认采用异步复制方式，这样从节点不用一直访问主服务器来更新自己的数据。</p>
<p>主要用途：读写分离</p>
<p>在开发工作中，有时候遇到某个sql 语句是需要锁表的，导致暂时不能使用读的服务，这样就会影响公司现有的业务，使用主从复制，让主库负责写，从库负责读，这样，即是主库出现了锁表的情况，通过读从库也可以保证业务的正常运作。</p>
<p> <strong>数据实时备份，当系统中某个节点发生故障时，可以方便的故障切换</strong></p>
<p><strong>提高系统的读性能</strong></p>
<p>一主一从和一主多从是最常见的主从架构，实施起来简单并且有效，不仅可以实现HA，而且还能读写分离，进而提升集群的并发能力</p>
<h5 id="原理"><a href="#原理" class="headerlink" title="原理:"></a>原理:</h5><p><strong>MySQL 主从复制原理</strong>MySQL主从复制涉及到三个线程，一个运行在主节点（log dump thread），其余两个(I/O thread, SQL thread)运行在从节点，如下图所示:</p>
<p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 26-1574939932294.png)</p>
<p><strong>l 主节点 binary log dump 线程</strong></p>
<p>当从节点连接主节点时，主节点会创建一个log dump 线程，用于发送bin-log的内容。在读取bin-log中的操作时，此线程会对主节点上的bin-log加锁，当读取完成，甚至在发动给从节点之前，锁会被释放。</p>
<p><strong>l 从节点I/O线程</strong></p>
<p>当从节点上执行<code>start slave</code>命令之后，从节点会创建一个I/O线程用来连接主节点，请求主库中更新的bin-log。I/O线程接收到主节点binlog dump 进程发来的更新之后，保存在本地relay-log中。</p>
<p><strong>l 从节点SQL线程</strong></p>
<p>SQL线程负责读取relay log中的内容，解析成具体的操作并执行，最终保证主从数据的一致性。</p>
<p>对于每一个主从连接，都需要三个进程来完成。当主节点有多个从节点时，主节点会为每一个当前连接的从节点建一个binary log dump 进程，而每个从节点都有自己的I/O进程，SQL进程。从节点用两个线程将从主库拉取更新和执行分成独立的任务，这样在执行同步数据任务的时候，不会降低读操作的性能。比如，如果从节点没有运行，此时I/O进程可以很快从主节点获取更新，尽管SQL进程还没有执行。如果在SQL进程执行之前从节点服务停止，至少I/O进程已经从主节点拉取到了最新的变更并且保存在本地relay日志中，当服务再次起来之后，就可以完成数据的同步。</p>
<h5 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h5><ol>
<li><p>启用二进制日志记录并设置 server_id </p>
<p>主：</p>
<p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 28.png)</p>
<p>从：</p>
</li>
</ol>
<p>![](C:\Users\Administrator\Desktop\第一步.assets\Image 29.png)</p>
<ol start="2">
<li><p>在主库上创建一个复制用户。从库使用此账户连接到主库 </p>
<p><code>mysqle&gt; GRANT REPLICATION SLAVE ON *.* TO &#39;slave&#39;@&#39;172.16.1.52&#39; IDENTIFIED BY &#39;oldboy123&#39;;</code></p>
</li>
<li><p>在从库上，通过远程连接从库进行备份。</p>
<p><code>shell&gt; mysqldump -h 172.16.1.51 -u slave --password=oldboy123 --all-databases --routines --events --single-transaction --master-data &gt; dump.sql</code></p>
</li>
<li><p>在从库上恢复备份、</p>
<p><code>shell&gt; mysql -uroot -poldboy123 -f &lt; dump.sql</code></p>
</li>
<li><p>在从库上备份恢复后，设置从库同步：</p>
<p><code>mysql&gt; CHANGE MASTER TO MASTER_HOST=&#39;172.16.1.51&#39;,MASTER_USER=&#39;slave&#39;,MASTER_PASSWORD=&#39;oldboy123&#39;,MASTER_LOG_FILE=&#39;mariadb-bin.000002&#39;,MASTER_POS=401;</code></p>
<p>查看master状态：他存储在元数据文件中</p>
<p><code>mysql&gt; show master status;</code></p>
<p>或</p>
<p><code>show metadata</code></p>
</li>
<li><p>在从库上启用I/O线程</p>
<p><code>START SLAVE;</code></p>
</li>
<li><p>检查主从复制的状态：</p>
<p><code>SHOW SLAVE STATUS\G;</code></p>
</li>
</ol>
<h5 id="Markdown文字大小语法"><a href="#Markdown文字大小语法" class="headerlink" title="Markdown文字大小语法"></a>Markdown文字大小语法</h5><p>   &lt;font  更改语法&gt;   你的内容   <br>   更改语法有:<br>   color=#0099ff   更改字体颜色<br>   face=”黑体”   更改字体<br>   size= 7     更改字体大小</p>
<p> <font size="5">   你的内容   </font></p>
<h4 id="zabbix配置"><a href="#zabbix配置" class="headerlink" title="zabbix配置"></a>zabbix配置</h4><ol>
<li><p>安装清华源</p>
<blockquote>
<p> rpm -ivh <a href="https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</a></p>
<pre><code>rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-1.el7.noarch.rpm  -- 老版本</code></pre></blockquote>
</li>
<li><p>安装zabbix相关的软件</p>
<p><code>yum install -y zabbix-server-mysql zabbix-web-mysql httpd php mariadb-server</code></p>
</li>
</ol>
<h4 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h4><p>概念</p>
<p>作用</p>
<p>配置</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/10/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
